options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: s36kIQ_Encoder
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: s36kIQ_Encoder
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: decim
  id: variable
  parameters:
    comment: ''
    value: '32'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [440, 12.0]
    rotation: 0
    state: enabled
- name: freq_adjust
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: ''
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '-1500'
    step: '10'
    stop: '1500'
    value: '000'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [848, 12.0]
    rotation: 0
    state: enabled
- name: frequency_hz
  id: variable_qtgui_entry
  parameters:
    comment: ''
    entry_signal: editingFinished
    gui_hint: '[1,0]'
    label: Frequency [Hz]
    type: real
    value: 390000000+3700
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [288, 12.0]
    rotation: 0
    state: enabled
- name: num_tap
  id: variable
  parameters:
    comment: ''
    value: '11'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [760, 12.0]
    rotation: 0
    state: enabled
- name: samp_per_symbol
  id: variable
  parameters:
    comment: ''
    value: '2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [528, 12.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: 80000*decim
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 12]
    rotation: 0
    state: enabled
- name: symbol_rate
  id: variable
  parameters:
    comment: ''
    value: '18000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [656, 12.0]
    rotation: 0
    state: enabled
- name: blocks_file_source_0_0_0
  id: blocks_file_source
  parameters:
    affinity: ''
    alias: ''
    begin_tag: pmt.PMT_NIL
    comment: ''
    file: /home/ctn008/tetraDMO-Transmitter/samples/TxDMO_s36kBit.uint8
    length: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    repeat: 'False'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 172.0]
    rotation: 0
    state: enabled
- name: blocks_float_to_complex_0
  id: blocks_float_to_complex
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1096, 320.0]
    rotation: 0
    state: true
- name: blocks_multiply_xx_0
  id: blocks_multiply_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [720, 256.0]
    rotation: 0
    state: true
- name: blocks_multiply_xx_0_0
  id: blocks_multiply_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [720, 384.0]
    rotation: 0
    state: true
- name: blocks_repeat_0
  id: blocks_repeat
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    interp: samp_per_symbol
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [520, 260.0]
    rotation: 0
    state: true
- name: blocks_repeat_0_0
  id: blocks_repeat
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    interp: samp_per_symbol
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [512, 420.0]
    rotation: 0
    state: true
- name: blocks_throttle2_0
  id: blocks_throttle2
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    limit: auto
    maximum: '0.1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: symbol_rate*2
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [64, 332.0]
    rotation: 0
    state: enabled
- name: blocks_vector_source_x_1
  id: blocks_vector_source_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    repeat: 'True'
    tags: '[]'
    type: float
    vector: '[1]+ [0]*(samp_per_symbol-1)'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [520, 324.0]
    rotation: 0
    state: true
- name: epy_block_1
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\n\n\nclass dmoBurst_iqMapper(gr.basic_block):  \n  \
      \  # Phase Index Change Table: corresponding to current phase (row 0-7) and\
      \ current dibit value (column 0-3)\n    # B2k_1,B2k:   00 01 10 11\n    phase_shift\
      \ = (1, 3, 7, 5)\n\n    # Phase value corresponding to Phase Index\n    IQ_table\
      \ = (( np.cos(np.pi/4 * 0) , np.sin(np.pi/4 * 0) ),\n                ( np.cos(np.pi/4\
      \ * 1) , np.sin(np.pi/4 * 1) ),\n                ( np.cos(np.pi/4 * 2) , np.sin(np.pi/4\
      \ * 2) ),\n                ( np.cos(np.pi/4 * 3) , np.sin(np.pi/4 * 3) ),\n\
      \                ( np.cos(np.pi/4 * 4) , np.sin(np.pi/4 * 4) ),\n          \
      \      ( np.cos(np.pi/4 * 5) , np.sin(np.pi/4 * 5) ),\n                ( np.cos(np.pi/4\
      \ * 6) , np.sin(np.pi/4 * 6) ),\n                ( np.cos(np.pi/4 * 7) , np.sin(np.pi/4\
      \ * 7) ))\n\n    def __init__(self):\n        \"\"\"arguments to this function\
      \ show up as parameters in GRC\"\"\"\n        gr.basic_block.__init__(\n   \
      \         self,\n            name='dmoBurst_iqMapper',\n            in_sig=[np.uint8],\n\
      \            out_sig=[np.float32, np.float32]\n        )\n        self.cur_phase_index\
      \ = \t0\t\t\t\t# current phase index value S(0) = 1\n\n    def general_work(self,\
      \ input_items, output_items):\n        if (len(input_items[0]) < 520) or (len(output_items[0])\
      \ < 510):\n            in_index = 0\n            out_index = 0\n        else:\n\
      \            if ( input_items[0][0] ):   # active burst, either DSB, DNB or\
      \ DNB_SF\n                for out_index in range (510):\n                  \
      \  self.cur_phase_index += dmoBurst_iqMapper.phase_shift[ input_items[0][out_index+10]\
      \ ]\n                    if self.cur_phase_index >= 8:\n                   \
      \     self.cur_phase_index -= 8\n                    output_items[0][out_index]\
      \ = dmoBurst_iqMapper.IQ_table[ self.cur_phase_index ][0]\n                \
      \    output_items[1][out_index] = dmoBurst_iqMapper.IQ_table[ self.cur_phase_index\
      \ ][1]\n            else:\n                for out_index in range (510):\n \
      \                   output_items[0][out_index] = 0\n                    output_items[1][out_index]\
      \ = 0\n            in_index = 520\n        self.consume(0, in_index)\n     \
      \   return out_index\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('dmoBurst_iqMapper', 'dmoBurst_iqMapper', [], [('0', 'byte', 1)],
      [('0', 'float', 1), ('1', 'float', 1)], 'arguments to this function show up
      as parameters in GRC', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [256, 328.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_1
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: int(510*2560/36)
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1.5'
    ymin: '-1.5'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1304, 316.0]
    rotation: 0
    state: enabled
- name: root_raised_cosine_filter_0
  id: root_raised_cosine_filter
  parameters:
    affinity: ''
    alias: ''
    alpha: '0.35'
    comment: ''
    decim: '1'
    gain: samp_per_symbol
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    ntaps: num_tap*samp_per_symbol
    samp_rate: samp_per_symbol*symbol_rate
    sym_rate: symbol_rate
    type: fir_filter_fff
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [856, 236.0]
    rotation: 0
    state: true
- name: root_raised_cosine_filter_0_0
  id: root_raised_cosine_filter
  parameters:
    affinity: ''
    alias: ''
    alpha: '0.35'
    comment: ''
    decim: '1'
    gain: samp_per_symbol
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    ntaps: num_tap*samp_per_symbol
    samp_rate: samp_per_symbol*symbol_rate
    sym_rate: symbol_rate
    type: fir_filter_fff
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [856, 364.0]
    rotation: 0
    state: true

connections:
- [blocks_file_source_0_0_0, '0', blocks_throttle2_0, '0']
- [blocks_float_to_complex_0, '0', qtgui_time_sink_x_1, '0']
- [blocks_multiply_xx_0, '0', root_raised_cosine_filter_0, '0']
- [blocks_multiply_xx_0_0, '0', root_raised_cosine_filter_0_0, '0']
- [blocks_repeat_0, '0', blocks_multiply_xx_0, '0']
- [blocks_repeat_0_0, '0', blocks_multiply_xx_0_0, '1']
- [blocks_throttle2_0, '0', epy_block_1, '0']
- [blocks_vector_source_x_1, '0', blocks_multiply_xx_0, '1']
- [blocks_vector_source_x_1, '0', blocks_multiply_xx_0_0, '0']
- [epy_block_1, '0', blocks_repeat_0, '0']
- [epy_block_1, '1', blocks_repeat_0_0, '0']
- [root_raised_cosine_filter_0, '0', blocks_float_to_complex_0, '0']
- [root_raised_cosine_filter_0_0, '0', blocks_float_to_complex_0, '1']

metadata:
  file_format: 1
  grc_version: 3.10.10.0
